name: CI â€“ Python

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - 'feat/**'
      - 'fix/**'
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    name: Lint & Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install project dependencies
        if: hashFiles('requirements.txt') != ''
        run: python -m pip install -r requirements.txt

      - name: Install development dependencies
        run: |
          if [ -f requirements-dev.txt ]; then
            python -m pip install -r requirements-dev.txt
          else
            python -m pip install ruff pytest pytest-cov pytest-xdist coverage
          fi

      - name: Run ruff
        run: ruff check . --extend-exclude ".venv,data,dist"

      - name: Run pytest with coverage
        run: |
          mkdir -p reports
          pytest -n auto --maxfail=1 --disable-warnings \
            --junitxml=reports/pytest.xml \
            --cov=./ --cov-report=term-missing \
            --cov-report=xml:reports/coverage.xml

      - name: Upload coverage data and reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.python-version }}
          path: |
            reports/
            .coverage
          if-no-files-found: warn

      - name: Publish test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Pytest (Python ${{ matrix.python-version }})
          reporter: java-junit
          path: reports/pytest.xml
          fail-on-error: false

  smoke:
    name: Smoke test
    runs-on: ubuntu-latest
    needs: lint-test
    if: ${{ hashFiles('data/ci_sample/**') != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install project dependencies
        if: hashFiles('requirements.txt') != ''
        run: python -m pip install -r requirements.txt

      - name: Run smoke test
        run: |
          set -o pipefail
          mkdir -p smoke_logs
          if [ -f pipeline_run.py ]; then
            python pipeline_run.py --dry-run --no-upload --data-dir data/ci_sample | tee smoke_logs/pipeline.log
          else
            echo "pipeline_run.py absent (smoke skip)" | tee smoke_logs/skip.log
          fi

      - name: Upload smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-logs
          path: smoke_logs/
          if-no-files-found: warn
