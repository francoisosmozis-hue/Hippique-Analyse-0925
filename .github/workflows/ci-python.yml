name: CI - Python

on:
  push:
    branches:
      - main
      - develop
      - 'feat/**'
      - 'fix/**'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  PYTHONDONTWRITEBYTECODE: '1'
  PYTHONUNBUFFERED: '1'
  PYTHONPATH:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run Ruff
        run: ruff check .

  lint-test:
    name: Tests
    runs-on: ubuntu-latest
    needs: lint        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run test suite
        run: |
          mkdir -p reports
          pytest \
            --junitxml=reports/pytest.xml \
            --cov=. \
            --cov-report=xml:reports/coverage.xml \
            --cov-report=term

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: python-reports
          path: |
            reports/
            .coverage
          if-no-files-found: ignore

  roi-smoke:
    name: ROI smoke (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: lint-test
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      python-version: ${{ matrix.python-version }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          python -m pip install pytest pyyaml

      - name: Run ROI smoke test
        run: pytest -q tests/test_roi_smoke.py
        
      - name: Upload ROI artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: roi-smoke-artifacts-${{ matrix.python-version }}
          path: |
            artifacts/metrics.json
            artifacts/per_horse_report.csv
            artifacts/cmd_update_excel.txt
          if-no-files-found: warn
        
  smoke:
    name: Smoke test
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine smoke prerequisites
        id: smoke
        run: |
          if [ -f pipeline_run.py ] && [ -d data/ci_sample ]; then
            echo "run=true" >> "$GITHUB_OUTPUT"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Python
        if: steps.smoke.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        if: steps.smoke.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi

      - name: Run smoke scenario
        if: steps.smoke.outputs.run == 'true'
        run: |
          mkdir -p reports
          python pipeline_run.py --dry-run --no-upload --data-dir data/ci_sample | tee reports/smoke.log

      - name: Upload smoke artefacts
        if: steps.smoke.outputs.run == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: smoke-reports
          path: reports/smoke.log
          if-no-files-found: ignore

      - name: Smoke test skipped
        if: steps.smoke.outputs.run != 'true'
        run: echo "Smoke test prerequisites not met; skipping."
  
