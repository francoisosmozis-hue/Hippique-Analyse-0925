name: CI – Python

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - 'feat/**'
      - 'fix/**'
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    name: Lint & Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install project dependencies
        if: ${{ hashFiles('requirements.txt') != '' }}
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Install development dependencies
        run: |
          if [ -f requirements-dev.txt ]; then
            python -m pip install -r requirements-dev.txt
          else
            python -m pip install ruff pytest pytest-cov pytest-xdist coverage
          fi

      - name: Ruff (format & lint)
        run: |
          ruff format .
          ruff check --fix

      - name: Run tests (Pytest → JUnit XML)
        run: |
          mkdir -p reports/junit
          pytest -q -n auto --maxfail=1 --disable-warnings \
                 --junitxml=reports/junit/pytest-${{ matrix.python-version }}.xml \
                 --cov=. --cov-report=term-missing

      - name: Enforce minimum coverage (60%)
        run: |
          coverage xml -o reports/coverage.xml
          python - << 'PY'
import xml.etree.ElementTree as ET
from pathlib import Path
path = Path('reports/coverage.xml')
if not path.exists():
    raise SystemExit('coverage XML not found')
t = ET.parse(path)
cov = float(t.getroot().attrib.get('line-rate', 0)) * 100
print(f"Coverage: {cov:.1f}%")
exit(0 if cov >= 60.0 else 1)
PY

      - name: Publish test report
        if: ${{ always() }}
        uses: dorny/test-reporter@v1
        with:
          name: Pytest (Python ${{ matrix.python-version }})
          reporter: python-pytest
          path: reports/junit/pytest-${{ matrix.python-version }}.xml
          fail-on-error: false

  
