name: Gemini Code Review

on:
  workflow_dispatch:
  pull_request: { types: [opened, synchronize, reopened] }

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: gemini-review-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  review:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.head.repo.full_name == github.repository &&
       secrets.GEMINI_API_KEY != '')

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai
      - name: Build diff summary with Gemini
        id: gemini
        env: { GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }} }
        run: |
          set -euo pipefail
          if [ -z "${GEMINI_API_KEY:-}" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"; exit 0; fi
          base_sha="${{ github.event.pull_request.base.sha || github.event.before }}"
          head_sha="${{ github.event.pull_request.head.sha || github.sha }}"
          git fetch --no-tags --prune --depth=2 origin "+refs/heads/*:refs/remotes/origin/*"
          python - <<'PY'
import os, pathlib, google.generativeai as gen, subprocess
gen.configure(api_key=os.environ["GEMINI_API_KEY"])
diff=subprocess.run(["bash","-lc","git diff --unified=0 $base_sha $head_sha"],capture_output=True,text=True).stdout
prompt="Tu es un reviewer Python/CI senior. Concentre-toi sur robustesse, sécurité secrets, et respect seuils GPI (budget 5€, EV≥40%, ROI_SP≥20%, payout≥10, overround≤1.30). Propose des patchs courts."
body=gen.GenerativeModel("gemini-1.5-flash").generate_content(prompt+"\n\nDiff:\n"+diff).text or ""
pathlib.Path("GEMINI_PR_REVIEW.md").write_text(body,encoding="utf-8")
PY
      - uses: marocchino/sticky-pull-request-comment@v2
        if: steps.gemini.outputs.skip != 'true'
        with: { recreate: true, path: GEMINI_PR_REVIEW.md }
        
