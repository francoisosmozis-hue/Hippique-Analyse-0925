name: auth-check
on: { workflow_dispatch: {} }

permissions:
  id-token: write       # requis pour WIF
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Vérifier que les secrets existent (sans afficher leur contenu)
      - name: Secrets presence
        run: |
          test -n "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}" || (echo "Missing WORKLOAD_IDENTITY_PROVIDER" && exit 1)
          test -n "${{ secrets.GCP_SERVICE_ACCOUNT }}" || (echo "Missing GCP_SERVICE_ACCOUNT" && exit 1)

      # 2) Auth GitHub → GCP via Workload Identity Federation
      - name: Auth via WIF
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true

      # 3) Installer gcloud
      - uses: google-github-actions/setup-gcloud@v3

      # 4) Fixer explicitement le projet (recommandé)
      - name: Set project
        run: gcloud config set project analyse-hippique

      # 5) Qui suis-je ? (doit montrer la SA comme compte actif)
      - name: Who am I?
        run: |
          gcloud auth list
          gcloud config list

      # 6) Appel API simple (preuve que le token marche)
      - name: Sanity API call
        run: |
          TOKEN="$(gcloud auth print-access-token)"
          curl -s -H "Authorization: Bearer $TOKEN" \
            "https://cloudresourcemanager.googleapis.com/v1/projects/$(gcloud config get-value project)" \
            | head -c 400 || true
